<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserTestMapper">
    <resultMap id="BaseResultMap" type="model.UserTest">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="INTEGER" property="userName"/>
        <result column="password" jdbcType="INTEGER" property="password"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, user_name, password
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_test
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user_test
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.UserTest">
        insert into user_test (user_id, user_name, password)
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=INTEGER}, #{password,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="model.UserTest">
        insert into user_test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.UserTest">
        update user_test
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.UserTest">
        update user_test
        set user_name = #{userName,jdbcType=INTEGER},
            password  = #{password,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <resultMap id="BaseResultMap" type="model.UserTest">
        <id column="userId" jdbcType="INTEGER" property="userid"/>
        <result column="userName" jdbcType="INTEGER" property="username"/>
        <result column="password" jdbcType="INTEGER" property="password"/>
    </resultMap>
    <sql id="Base_Column_List">
        userId, userName, password
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_test
        where userId = #{userid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user_test
        where userId = #{userid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="model.UserTest">
        insert into user_test (userId, userName, password)
        values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=INTEGER}, #{password,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="model.UserTest">
        insert into user_test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userId,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="model.UserTest">
        update user_test
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=INTEGER},
            </if>
        </set>
        where userId = #{userid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="model.UserTest">
        update user_test
        set userName = #{username,jdbcType=INTEGER},
            password = #{password,jdbcType=INTEGER}
        where userId = #{userid,jdbcType=INTEGER}
    </update>
</mapper>